 * finish login with user -- done, with password encrypted, add register
    * edit account
    * change or recover password
 * form validation -- done
 * add/remove/update user -- done
 * upload support -- done
 * markdown: make it can display information from text.like a wiki : splinx
    : https://github.com/dcolish/flask-markdown
    : http://code.google.com/p/python-creole/
    * finally, flaskext.markdown used -- done
    * if need intergrated with SVN
 * test : http://packages.python.org/Flask-Testing/ -- need more code here~
 * image support -- PIL
 * mashups : from simple cd : scrapy
 * RSS feeds, jsontify 
	: werkzeug.contrib.atom import AtomFeed -- done
	: from xml.etree import ElementTree
 * chinese support : http://packages.python.org/Flask-Babel/ 
    * maybe not need this, just use chinese in code
 * Make IMS logo, as well as pictures that required
 * get css baseline 
 * menu : theme support? -- basic done
    * menu with jQuery: ajax
 * pagenation :
 * navigation table for nav links
 * More database table relatetionship
 * database admin(CRUD)
 * search : Lucene solr
 * todo assignment
 * vedio support : html5 or flash
 * flask-slik

 other: Scrapy BeautifulSoup Xapian mechanize
项目实现的主要功能：
    用户系统
    站内邮件系统
    基本的sns（关注/我说）
    商品点评推荐
    任务平台
    兑换平台
    后台管理
站内消息系统：
    每个用户信息里面新建一个消息数据表。主要部分有1，标题2，内容3，阅读与否（可以用0或1作判断） 
    如果管理员发了信息，自动往每个用户里面添加消息数据，然后在用户界面里调用，作一个判断，如果有新消息，弹出提示或声音。如果没有则照常，当然用户可以对消息进行删除或者发送给其它用户。


FixMe:
	* login: remember me, find back password(email module)
	* wiki others: name space, attachment, other syntax, auto link		
	* user is_admin()
	* add user for Wiki, and update it in feed
